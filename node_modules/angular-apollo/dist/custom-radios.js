"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var api_1 = require("./api/api");
var http_1 = require("@angular/http");
var body_formatter_1 = require("./body-formatter");
var customRadioPath = 'me/customradio';
var CustomRadioService = (function () {
    function CustomRadioService(apiService) {
        this.apiService = apiService;
    }
    CustomRadioService.prototype.save = function (params) {
        var postData = this.formatBody(params);
        return this.apiService.authorised('POST', customRadioPath, postData, this.getRequestOptions());
    };
    CustomRadioService.prototype.formatBody = function (params) {
        return Object.keys(params)
            .map(function (key) { return key + "=" + encodeURIComponent(params[key]); }).join('&');
    };
    CustomRadioService.prototype.getRequestOptions = function () {
        return {
            headers: new http_1.Headers({ 'Content-Type': 'application/x-www-form-urlencoded' })
        };
    };
    CustomRadioService.prototype.delete = function (params) {
        return this
            .apiService.authorised('DELETE', customRadioPath + "/" + params.radio_id);
    };
    CustomRadioService.prototype.edit = function (params) {
        return this.apiService.authorised('PUT', customRadioPath + "/" + params.radio_id, body_formatter_1.urlEncoded(params), this.getRequestOptions());
    };
    return CustomRadioService;
}());
CustomRadioService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [api_1.ApiService])
], CustomRadioService);
exports.default = CustomRadioService;
//# sourceMappingURL=custom-radios.js.map