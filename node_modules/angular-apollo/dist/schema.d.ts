export interface Type {
    id: number;
    name: string;
    slug: string;
    item_type: ItemType;
}
export interface ItemType {
    id: number;
    name: string;
}
export interface User {
    id: number;
    login: string;
    nickname: string;
}
export interface TextMetadata {
    value: string;
    id_text_type: number;
}
export interface Metadata {
    title: TextMetadata;
    description: TextMetadata;
}
export interface Images {
    small: string;
    medium: string;
    large: string;
    extralarge: string;
}
export interface Rights {
    download: boolean;
    offline: boolean;
    stream: boolean;
}
export interface Artist {
    id: number;
    name: string;
    nb_albums: number;
    covers: Images;
}
export interface Album {
    id: number;
    icpn: string;
    title: string;
    type: string;
    subtitle?: string;
    duration: number;
    nb_tracks: number;
    release_date: string;
    covers: Images;
    artists: Array<Artist>;
    rights: Rights;
}
export interface ListItem {
    id: number;
    start_date: string;
    end_date: string;
    public: boolean;
    custom: boolean;
    picto_id: number;
    partner: boolean;
    type: Type;
    nb_items: number;
    tags?: any;
    lastupdate_datetime: string;
    user: User;
    metadata: Metadata;
    title: string;
    default_covers: Images;
    covers?: Images;
    object: string;
    tracks: TrackIterator;
}
export interface List extends ListItem {
    lists: ListIterator;
}
export interface TrackItem {
    id: number;
    download_id: string;
    offline_id: string;
    play_id: string;
    isrc: string;
    release_date: string;
    title: string;
    subtitle: string;
    duration: number;
    object: string;
    album: Album;
    artists: Array<Artist>;
    rights: Rights;
}
export interface Iterator {
    offset: number;
    limit: number;
    direct_link: string;
    next_link?: string;
    count_items: number;
}
export interface ListIterator extends Iterator {
    items: Array<ListItem>;
}
export interface TrackIterator extends Iterator {
    items: Array<TrackItem>;
}
export interface Account {
    id: number;
    login: string;
    role?: ItemType;
    subscription?: ItemType;
    expire_in: string;
    token_type: string;
    refresh_token: string;
    access_token: string;
}
export interface Device {
    device_id: string;
    device_name: string;
}
export interface Login {
    login: string;
    password: string;
    device?: Device;
}
