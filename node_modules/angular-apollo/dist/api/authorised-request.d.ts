import { RequestOptionsArgs } from '@angular/http';
import { Observable } from 'rxjs/Rx';
import { AuthTokensValidator } from '../token-management/auth-tokens-validator';
import 'rxjs/add/operator/map';
import { ApiTokenStore } from './api';
export declare class ApiAuthorisationError extends Error {
    constructor(options?: {
        missingTokens?: boolean;
        invalidAuthToken?: boolean;
    });
}
export interface Secure {
    authorisedRequest: (options: RequestOptionsArgs, whenAuthorised: (options: RequestOptionsArgs) => Observable<any>) => Observable<any>;
}
export declare class SecureRequest implements Secure {
    private apiTokenStore;
    private authTokensValidator;
    constructor(apiTokenStore: ApiTokenStore, authTokensValidator: AuthTokensValidator);
    authorisedRequest<T>(options: RequestOptionsArgs, whenAuthorised: (options: RequestOptionsArgs) => Observable<T>): Observable<{}>;
}
