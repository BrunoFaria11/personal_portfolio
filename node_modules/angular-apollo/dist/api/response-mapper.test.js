"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var response_mapper_1 = require("./response-mapper");
var http_1 = require("@angular/http");
describe('responseMapper', function () {
    it('returns a successful response', function () {
        var expectedResponse = new http_1.Response(new http_1.ResponseOptions({
            body: {},
            status: 200
        }));
        var response = response_mapper_1.mapResponse(expectedResponse);
        expect(response).toEqual(expectedResponse.json());
    });
    it('returns a successful response when there is a code of 1', function () {
        var expectedResponse = new http_1.Response(new http_1.ResponseOptions({
            body: { status: 1 },
            status: 200
        }));
        var response = response_mapper_1.mapResponse(expectedResponse);
        expect(response).toEqual(expectedResponse.json());
    });
    [400, 500, 404]
        .map(function (statusCode) { return it("throws an api error when the status code is " + statusCode, function () {
        var expectedResponse = new http_1.Response(new http_1.ResponseOptions({
            body: {},
            status: statusCode
        }));
        var getResponse = function () { return response_mapper_1.mapResponse(expectedResponse); };
        expect(getResponse).toThrowError(response_mapper_1.ApiError, 'Bad status code');
    }); });
    [0, 2].map(function (code) {
        it('throws when the body looks like an error', function () {
            var expectedResponse = new http_1.Response(new http_1.ResponseOptions({
                body: { status: code, statusMessage: 'it broke' },
                status: 200
            }));
            var getResponse = function () { return response_mapper_1.mapResponse(expectedResponse); };
            expect(getResponse).toThrowError(response_mapper_1.ApiError, 'Error response received');
        });
    });
});
//# sourceMappingURL=response-mapper.test.js.map